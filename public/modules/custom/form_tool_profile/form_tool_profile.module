<?php

/**
 * @file
 * Provides hooks and helpers for profile / user related things.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Url;
use Drupal\user\UserInterface;

/**
 * Implements hook_menu_local_tasks_alter().
 */
function form_tool_profile_menu_local_tasks_alter(&$data, $route_name) {
  if ($route_name == 'user.login'  && isset($data['tabs'][0])) {
    // Remove all tabs from user login form.
    foreach ($data['tabs'][0] as $key => $tab) {
      $data['tabs'][0][$key]['#access'] = FALSE;
    }
  }
}

/**
 * Implements hook_form_alter().
 */
function form_tool_profile_form_alter(&$form, FormStateInterface $form_state, $form_id) {

  $route_name = \Drupal::routeMatch()->getRouteName();
  // Hide fields from login forms without proper query strings.
  // If we're at user login.
  if ($form_id == 'user_login_form') {
    $qParams = \Drupal::request()->query->all();
    // We want to hide all normal login elements
    // to only allow login via Tunnistamo.
    if (!isset($qParams['login']) || $qParams['login'] != 'form') {
      unset($form['name']);
      unset($form['pass']);
      unset($form['actions']);
    }

    // Let's not cache this form at all, anywhere.
    // Or cache it per url query args.
    $form['#cache'] = [
      'contexts' => [
        'url.query_args',
      ],
    ];

  }
  // And from Tunnistamo, we want to allow only user logins
  // without loginparameter.
  if ($form_id == 'openid_connect_login_form') {
    $qParams = \Drupal::request()->query->all();

    $qParam = $qParams['login'] ?? NULL;
    $isLoginRoute = $route_name === 'user.login';

    if (!in_array($qParam, ['admin']) && !$isLoginRoute) {
      unset($form["openid_connect_client_tunnistamoadmin_login"]);
    }

    // Show only TunnistamoAdmin login for this login parameter.
    if ($qParam === 'admin') {
      unset($form["openid_connect_client_tunnistamo_login"]);
    }

    if ($qParam === 'form') {
      unset($form["openid_connect_client_tunnistamoadmin_login"]);
      unset($form["openid_connect_client_tunnistamo_login"]);
    }

    // Regular user auth is always removed on user.page routes.
    if ($isLoginRoute) {
      unset($form["openid_connect_client_tunnistamo_login"]);
    }

    $form['openid_connect_client_tunnistamo_login']['#value'] = t('Log in');

  }

}

/**
 * Implements hook_page_attachments().
 */
function form_tool_profile_page_attachments(array &$attachments) {
  $admin_context = \Drupal::service('router.admin_context');
  if (!$admin_context->isAdminRoute() && \Drupal::currentUser()->isAuthenticated()) {

    $languages = \Drupal::languageManager()->getLanguages();

    $language_urls = [];
    foreach ($languages as $lang) {
      $url_options = [
        'absolute' => TRUE,
        'language' => $lang,
      ];

      $language_urls[] = Url::fromRoute('<front>', [], $url_options)->toString();
    }

    $attachments['#attached']['library'][] = 'form_tool_profile/form_tool_profile';

    $attachments['#attached']['drupalSettings']['form_tool_profile']['basePaths'] = $language_urls;
    $attachments['#attached']['drupalSettings']['form_tool_profile']['logout'] = Url::fromRoute('user.logout.http')->toString();
  }
}

/**
 * Implements hook_metatags_attachments_alter().
 */
function form_tool_profile_metatags_attachments_alter(array &$metatag_attachments) {

  $node = \Drupal::routeMatch()->getMasterRouteMatch()->getParameter('node');
  $route_name = \Drupal::routeMatch()->getRouteName();

  if ($node && $node->getType() === 'webform' && $route_name === 'system.403') {
    foreach ($metatag_attachments['#attached']['html_head'] as $key => &$attachment) {
      if (!empty($attachment[1]) && strpos($attachment[1], 'title') !== FALSE) {
        $titleExploded = explode('|', $attachment[0]['#attributes']['content']);

        $webform_relation = $node->get('webform')->getValue()[0];
        $webform = \Drupal::entityTypeManager()->getStorage('webform')->load($webform_relation['target_id']);

        $titleExploded[0] = t(
          'Login to the form: @webform_label',
         ['@webform_label' => ' ' . $webform->label()],
         ['context' => 'Log in block title on error pages']
        );
        $newTitle = implode('|', $titleExploded);
        $attachment[0]['#attributes']['content'] = $newTitle;
      }
    }
  }
}

/**
 * Implements hook_preprocess_page().
 */
function form_tool_profile_preprocess_page(&$vars) {
  // Webform access check - 403 Page.
  $route_name = \Drupal::routeMatch()->getRouteName();
  $node = \Drupal::routeMatch()->getMasterRouteMatch()->getParameter('node');

  if ($node && $node->getType() === 'webform' && $route_name === 'system.403') {
    if (\Drupal::request()->attributes->has('exception')) {
      $vars['#cache']['max-age'] = 0;
      \Drupal::service('page_cache_kill_switch')->trigger();
    }

    $webform_relation = $node->get('webform')->getValue()[0];
    $webform = \Drupal::entityTypeManager()->getStorage('webform')->load($webform_relation['target_id']);
    $vars['page']['webform_label'] = $webform->label();
    $login_type = $webform->getThirdPartySetting('form_tool_webform_parameters', 'login_type');
    $block_ids = \Drupal::entityQuery('block_content')
      ->condition('field_login_type', $login_type)
      ->execute();

    $blocks = \Drupal::entityTypeManager()->getStorage('block_content')->loadMultiple($block_ids);

    foreach ($blocks as $b) {
      $vars['page']['login_block'][] = \Drupal::entityTypeManager()
        ->getViewBuilder('block_content')->view($b);
    }
  }

  // Check for basic user.login page.
  if ($route_name === 'user.login') {
    $block_ids = \Drupal::entityQuery('block_content')
      ->condition('field_login_type', 0)
      ->execute();

    $blocks = \Drupal::entityTypeManager()->getStorage('block_content')->loadMultiple($block_ids);

    foreach ($blocks as $b) {
      $vars['page']['login_block'][] = \Drupal::entityTypeManager()
        ->getViewBuilder('block_content')->view($b);
    }
  }
}

/**
 * Implements hook_user_predelete().
 */
function form_tool_profile_user_predelete(UserInterface $account) {
  try {
    $authdata = \Drupal::service('externalauth.authmap')->getAuthData($account->id(), 'openid_connect.tunnistamo');
    if (isset($authdata['authname'])) {
      $account->setUsername($authdata['authname']);
      $account->setEmail(NULL);
      $account->save();
    }
  }
  catch (\Exception $e) {

  }
}

/**
 * Implements hook_language_switch_links_alter().
 */
function form_tool_profile_language_switch_links_alter(array &$links, $type, Url &$url) {
  $route_name = \Drupal::routeMatch()->getRouteName();
  $parent_request = \Drupal::requestStack()->getParentRequest();

  if ($route_name === 'system.403' && $parent_request !== NULL) {
    $node = $parent_request->get('node');

    if (!$node) {
      return;
    }

    foreach ($links as $langcode => &$link) {
      $url = Url::fromRoute('entity.node.canonical', ['node' => $node->id()], ['language' => $langcode]);
      $lang = \Drupal::languageManager()->getLanguage($langcode);
      try {
        $node->getTranslation($langcode);
      }
      catch (Exception $e) {
        $link['no_translation'] = TRUE;
      }
      $url = Url::fromRoute('entity.node.canonical', ['node' => $node->id()], ['language' => $lang]);
      $link['url'] = $url;
      $link['altered'] = TRUE;
    }
  }
}

<?php

/**
 * @file
 * Primary module hooks for Helfi Drupal AuditLog module.
 *
 * @DCG
 * This file is no longer required in Drupal 8.
 * @see https://www.drupal.org/node/2217931
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Session\AccountInterface;
use Drupal\helfi_audit_log\Event\EntityInsertEvent;
use Drupal\helfi_audit_log\Event\UserLoginEvent;
use Drupal\helfi_audit_log\Event\UserLogoutEvent;
use Drupal\helfi_audit_log\Event\WebformViewEvent;

/**
 * Implements hook_user_login().
 */
function helfi_audit_log_user_login(AccountInterface $account) {
  // Instantiate our event.
  $event = new UserLoginEvent($account);

  // Get the event_dispatcher service and dispatch the event.
  $event_dispatcher = \Drupal::service('event_dispatcher');
  $event_dispatcher->dispatch($event, UserLoginEvent::EVENT_NAME);
}

/**
 * Implements hook_user_logout().
 */
function helfi_audit_log_user_logout(AccountInterface $account) {
  // Instantiate our event.
  $event = new UserLogoutEvent($account);

  // Get the event_dispatcher service and dispatch the event.
  $event_dispatcher = \Drupal::service('event_dispatcher');
  $event_dispatcher->dispatch($event, UserLogoutEvent::EVENT_NAME);
}

/**
 * Implements hook_entity_view().
 */
function helfi_audit_log_entity_view(array &$build, EntityInterface $entity) {

  // Only trigger event for webform content.
  if ($entity->bundle() == "webform") {

    // Instantiate our event.
    $event = new WebformViewEvent($entity);

    // Get the event_dispatcher service and dispatch the event.
    $event_dispatcher = \Drupal::service('event_dispatcher');
    $event_dispatcher->dispatch($event, WebformViewEvent::EVENT_NAME);

  }

}

/**
 * Implements hook_entity_insert().
 */
function helfi_audit_log_entity_insert(EntityInterface $entity) {

  // Trigger event only for users and webform nodes.
  if ($entity->getEntityTypeId() == "user" || ($entity->getEntityTypeId() == "node" && $entity->bundle() == "webform")) {

    // Instantiate our event.
    $event = new EntityInsertEvent($entity);

    // Get the event_dispatcher service and dispatch the event.
    $event_dispatcher = \Drupal::service('event_dispatcher');
    $event_dispatcher->dispatch($event, EntityInsertEvent::EVENT_NAME);

  }

}
